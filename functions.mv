<MvCOMMENT>
|
|	Custom Functions per Item
|
|	Function Setup:
|
|	<MvFUNCTION NAME = "XXXXX"  PARAMETERS = "module var, param, param_1, param_2, param_3, etc var" STANDARDOUTPUTLEVEL = "">
|
|
</MvCOMMENT>

<MvFUNCTION NAME = "Test" PARAMETERS = "module var, param, test_the_first, test_the_second, destination var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.destination" VALUE = "Helllo world">
</MvFUNCTION>

<MvFUNCTION NAME = "Format_Currency" PARAMETERS = "module var, param, plain_price, formatted_price var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Format_Currency( plain_price, formatted_price var )
	|
	</MvCOMMENT>

	<MvDO FILE = "{ g.Module_Root $ g.Store:currncy_mod:module }" NAME = "l.formatted_price" VALUE = "{ CurrencyModule_AddFormatting( g.Store:currncy_mod, l.plain_price ) }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Upcharge" PARAMETERS = "module var, param, charge_name, charge_type, amount, tax_exempt" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Upcharge( charge_name, charge_type, amount, tax_exempt )
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].BasketCharge_Delete_All_Type( g.Basket:basket_id, l.charge_type ) }">
		<MvFUNCTIONRETURN VALUE = "{ Parameter_Error( l.param, 'An error occured' ) }">
	</MvIF>

	<MvIF EXPR = "{ l.amount GT 0 }">
		<MvASSIGN NAME = "l.basket_charge:basket_id"	VALUE = "{ g.Basket:basket_id }">
		<MvASSIGN NAME = "l.basket_charge:type"			VALUE = "{ l.charge_type }">
		<MvASSIGN NAME = "l.basket_charge:descrip"		VALUE = "{ l.charge_name }">
		<MvASSIGN NAME = "l.basket_charge:amount"		VALUE = "{ l.amount }">
		<MvASSIGN NAME = "l.basket_charge:disp_amt"		VALUE = "{ l.amount }">
		<MvASSIGN NAME = "l.basket_charge:tax_exempt"	VALUE = "{ l.tax_exempt }">
		<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.sucess" VALUE = "{ BasketCharge_Insert( l.basket_charge ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Refresh the Basket Charges & Basket Total
	|
	</MvCOMMENT>

	<MvFOREACH ITERATOR = "l.charge" ARRAY = "l.charges" COUNT = "{ [ g.Module_Library_DB ].BasketChargeList_Load_Basket( g.Basket:basket_id, l.charges ) }">
		<MvDO FILE = "{ g.Module_Root $ g.Store:currncy_mod:module }" NAME = "l.charge:formatted_amount" VALUE = "{ CurrencyModule_AddFormatting( g.Store:currncy_mod, l.charge:amount ) }" />
		<MvDO FILE = "{ g.Module_Root $ g.Store:currncy_mod:module }" NAME = "l.charge:formatted_disp_amt" VALUE = "{ CurrencyModule_AddFormatting( g.Store:currncy_mod, l.charge:disp_amt ) }" />
	</MvFOREACH>
	<MvASSIGN NAME = "l.all_settings:basket:charges" VALUE = "{ l.charges }">

	<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.all_settings:basket:total" VALUE = "{ Basket_Total( g.Basket:basket_id ) }">
	<MvDO FILE = "{ g.Module_Store_Module_Currency }" NAME = "l.all_settings:basket:formatted_total" VALUE = "{ CurrencyModule_AddFormatting( g.Store_Module_Currency, l.all_settings:basket:total ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Variant_Array" PARAMETERS = "module var, param, product_id, variants var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Variant_Array( product_id, variants var )
	|
	</MvCOMMENT>
	<MvASSIGN NAME = "l.variants" VALUE = "ðŸ”œ">
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "Date" PARAMETERS = "module var, param, format, timestamp, return var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Date( format, timestamp, return var )
	|
	</MvCOMMENT>


	<MvCOMMENT>
	|
	| Using some of PHP's Date Formatting
	|
	|	DAY
	|		d, j, N, S, z, l, D
	|
	|	MONTH
	|		m, n, F, M
	|
	|	YEAR
	|		Y, y
	|
	|	TIME
	|		a, A, g, G, h, H, i, s
	|
	|
	|
	</MvCOMMENT>


	<MvASSIGN NAME = "l.time_zone"	VALUE = "{ g.Merchant_Local_Timezone }">

	<MvASSIGN NAME = "l.output" VALUE = "">

	<MvASSIGN NAME = "l.months_long" VALUE = "{ miva_array_deserialize( 'January,February,March,April,May,June,July,August,September,October,November,December' ) }">
	<MvASSIGN NAME = "l.months_short" VALUE = "{ miva_array_deserialize( 'Jan,Feb,Mar,Apr,May,Jun,Jul,Augt,Sept,Oct,Nov,Dec' ) }">

	<MvASSIGN NAME = "l.days_long" VALUE = "{ miva_array_deserialize( 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday' ) }">
	<MvASSIGN NAME = "l.days_short" VALUE = "{ miva_array_deserialize( 'Sun,Mon,Tues,Wed,Thurs,Fri,Sat' ) }">

	<MvFOR INDEX = "l.pos" COUNT = "{ len_var( l.format ) }">
		<MvASSIGN NAME = "l.char" VALUE = "{ substring_var( l.format, l.pos, 1 ) }">

		<MvIF EXPR = "{ NOT ( l.char CIN 'djNSzlDmnFMYyaAgGhHis' ) }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.char }">
			<MvFORCONTINUE />
		</MvIF>

		<MvIF EXPR = "{ l.char EQ 'd' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_dayofmonth( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'j' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofmonth( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'N' }">
			<MvCOMMENT>
			|
			| (Sunday=1) :|
			|
			</MvCOMMENT>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofweek( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'S' }">
			<MvASSIGN NAME = "l.dow" VALUE = "{ time_t_dayofmonth( l.timestamp, l.time_zone ) }">
			<MvASSIGN NAME = "l.dow_a" VALUE = "{ l.dow MOD 10 }">
			<MvASSIGN NAME = "l.dow_b" VALUE = "{ l.dow MOD 100 }">

			<MvIF EXPR = "{ ( l.dow_a EQ 1 ) AND ( l.dow_b NE 11) }">
				<MvASSIGN NAME = "l.S" VALUE = "st">
			<MvELSEIF EXPR = "{ ( l.dow_a EQ 2) AND ( l.dow_b NE 12 ) }">
				<MvASSIGN NAME = "l.S" VALUE = "nd">
			<MvELSEIF EXPR = "{ ( l.dow_a EQ 3 ) AND ( l.dow_b NE 13 ) }">
				<MvASSIGN NAME = "l.S" VALUE = "rd">
			<MvELSE>
				<MvASSIGN NAME = "l.S" VALUE = "th">
			</MvIF>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.S }">
		<MvELSEIF EXPR = "{ l.char EQ 'z' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofyear( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'D' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.days_short[ ' $ time_t_dayofweek( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'l' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.days_long[ ' $ time_t_dayofweek( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'm' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_month( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'n' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_month( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'F' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.months_long[ ' $ time_t_month( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'M' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.months_short[ ' $ time_t_month( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'Y' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_year( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'y' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ substring_var( time_t_year( l.timestamp, l.time_zone ), 3, 2) }">
		<MvELSEIF EXPR = "{ l.char EQ 'a' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 11 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'pm' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'am' }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'A' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 11 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'PM' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'AM' }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'g' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 12 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ ( l.hour - 12 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.hour }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'G' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_hour( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'h' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 12 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( ( l.hour - 12 ), 2, 0 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( l.hour, 2, 0 ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'H' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_hour( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'i' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_min( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 's' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_sec( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSE>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.char }">
		</MvIF>

	</MvFOR>

	<MvASSIGN NAME = "l.return" VALUE = "{ l.output }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Product" PARAMETERS = "module var, param, options var, product var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		Load_Product( options var, product var )
		------------------------------------------------

		Example Use:
		```
		<h2>Component</h2>
		<mvt:assign name="g.options:code" value="'apple'" />
		<mvt:item name="developer_util" param="Load_Product(g.options, g.product_foo)" />
		<hr>
		<mvt:eval expr="glosub(miva_array_serialize(g.product_foo), ',', '<br>')" />
		```

	</MvCOMMENT>

	<MvASSIGN NAME = "l.product" VALUE = "{ _Load_Product( l.options ) }" />
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvFUNCTION NAME = "_Load_Product" PARAMETERS = "options var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>

		_Load_Product( options var, product var )
		------------------------------------------------

		Low-level function with availability for mvt:do
		Helpful for using variables at the `l.` & `l.settings` scopes

		Example Use:
		```
		<h2>mvt:do</h2>
		<mvt:assign name="l.options:code" value="'apple'" />
		<mvt:assign name="l.options:include" value="'runtime,currency,uris,url'" />
		<mvt:do file="g.Module_Root $ 'modules/util/developer_util.mvc'" name="l.product_v2" value="_Load_Product(l.options)" />
		<hr>
		<mvt:eval expr="glosub(miva_array_serialize(l.product_v2), ',', '<br>')" />
		```

	</MvCOMMENT>

	<MvIF EXPR = "{ l.options:id }">
		<MvIF EXPR = "{ 'runtime' IN l.options:include }">
			<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.result" VALUE = "{ Runtime_Product_Load_ID( l.options:id, l.product ) }" />
		<MvELSE>
			<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.result" VALUE = "{ Product_Load_ID( l.options:id, l.product ) }" />
		</MvIF>
	<MvELSEIF EXPR = "{ l.options:code }">
		<MvIF EXPR = "{ 'runtime' IN l.options:include }">
			<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.result" VALUE = "{ Runtime_Product_Load_Code( l.options:code, l.product ) }" />
		<MvELSE>
			<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.result" VALUE = "{ Product_Load_Code( l.options:code, l.product ) }" />
		</MvIF>
	<MvELSE>
		<MvFUNCTIONRETURN VALUE = "" />
	</MvIF>


	<MvIF EXPR = "{ ISNULL l.product:id }">
		<MvFUNCTIONRETURN VALUE = "" />
	</MvIF>

	<MvCOMMENT>
		| Currency Formatting
	</MvCOMMENT>
	<MvIF EXPR = "{ 'currency' IN l.options:include }">
		<MvDO FILE = "{ g.Module_Store_Module_Currency }" NAME = "l.product:formatted_price" VALUE = "{ CurrencyModule_AddFormatting( g.Store:currncy_mod, l.product:price ) }" />
		<MvDO FILE = "{ g.Module_Store_Module_Currency }" NAME = "l.product:formatted_cost" VALUE = "{ CurrencyModule_AddFormatting( g.Store:currncy_mod, l.product:cost ) }" />
	</MvIF>

	<MvCOMMENT>
		| Runtime
	</MvCOMMENT>
	<MvIF EXPR = "{ 'runtime' IN l.options:include }">
		<MvDO FILE = "{ g.Module_Feature_TUI_UT }" NAME = "l.result" VALUE = "{ CommonComponentFields_Initialize_Product_Runtime( l.product ) }" />
	</MvIF>

	<MvCOMMENT>
		| URIs
	</MvCOMMENT>
	<MvIF EXPR = "{ 'uris' CIN l.options:include }">
		<MvDO FILE = "{ g.Module_Feature_URI_DB }" NAME = "l.success" VALUE = "{ URIList_Load_Product( l.product:id, l.product:uris ) }" />
	</MvIF>

	<MvCOMMENT>
		| Store URL
	</MvCOMMENT>
	<MvIF EXPR = "{ 'url' CIN l.options:include }">
		<MvDO FILE = "{ g.Module_Feature_URI_UT }" NAME = "l.product:link" VALUE = "{ Store_Product_URL( l.product, l.null ) }" />
	</MvIF>


	<MvFUNCTIONRETURN VALUE = "{ l.product }" />
</MvFUNCTION>